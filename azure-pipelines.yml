# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- dev

pool:
  name: 'Chris'

variables:
- name: backendNodeVersion
  value: '18.x'
- name: frontendNodeVersion
  value: '18.x'
- name: backendDirectory
  value: 'backend'
- name: frontendDirectory
  value: 'frontend'
- group: SummarizzVars

stages:
- stage: Test
  displayName: 'Run Tests'
  jobs:
  - job: BackendTests
    displayName: 'Backend Tests'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '$(backendNodeVersion)'
      displayName: 'Install Node.js $(backendNodeVersion)'

    - script: |
        cd $(backendDirectory)
        npm install
      displayName: 'Backend - npm install'

    - script: |
        cd $(backendDirectory)
        npm run lint
      displayName: 'Backend - Lint'
      continueOnError: true

    - script: |
        cd $(backendDirectory)
        npm test
      displayName: 'Backend - Run tests'

  - job: FrontendTests
    displayName: 'Frontend Tests'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '$(frontendNodeVersion)'
      displayName: 'Install Node.js $(frontendNodeVersion)'

    - script: |
        cd $(frontendDirectory)
        npm install
      displayName: 'Frontend - npm install'

    - script: |
        cd $(frontendDirectory)
        npm run lint
      displayName: 'Frontend - Lint'
      continueOnError: true

- stage: Build
  displayName: 'Build Applications'
  dependsOn: Test
  jobs:
  - job: BuildBackend
    displayName: 'Build Backend'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '$(backendNodeVersion)'
      displayName: 'Install Node.js $(backendNodeVersion)'

    - script: |
        cd $(backendDirectory)
        npm install
      displayName: 'Backend - npm install'

    - powershell: |
        # Create .env file in the backend directory
        # Initialize an empty array to hold each line of the YAML content
        $yamlLines = @()

        # Add each key-value pair to the array, substituting environment variable values
        $yamlLines += "NODE_ENV=$(NODE_ENV)"
        $yamlLines += "PORT=$(PORT)"
        $yamlLines += "FIREBASE_API_KEY=$(FIREBASE_API_KEY)"
        $yamlLines += "FIREBASE_AUTH_DOMAIN=$(FIREBASE_AUTH_DOMAIN)"
        $yamlLines += "FIREBASE_PROJECT_ID=$(FIREBASE_PROJECT_ID)"
        $yamlLines += "FIREBASE_STORAGE_BUCKET=$(FIREBASE_STORAGE_BUCKET)"
        $yamlLines += "FIREBASE_MESSAGING_SENDER_ID=$(FIREBASE_MESSAGING_SENDER_ID)"
        $yamlLines += "FIREBASE_APP_ID=$(FIREBASE_APP_ID)"
        $yamlLines += "FIREBASE_MEASUREMENT_ID=$(FIREBASE_MEASUREMENT_ID)"
        $yamlLines += "FIREBASE_DATABASE_URL=$(FIREBASE_DATABASE_URL)"
        $yamlLines += "GOOGLE_CLIENT_ID=$(GOOGLE_CLIENT_ID)"
        $yamlLines += "GOOGLE_CLIENT_SECRET=$(GOOGLE_CLIENT_SECRET)"
        $yamlLines += "GITHUB_CLIENT_ID=$(GITHUB_CLIENT_ID)"
        $yamlLines += "GITHUB_CLIENT_SECRET=$(GITHUB_CLIENT_SECRET)"
        $yamlLines += "FRONTEND_URL=$(FRONTEND_URL)"
        $yamlLines += "BACKEND_URL=$(BACKEND_URL)"
        $yamlLines += "JWT_SECRET=$(JWT_SECRET)"
        $yamlLines += "ALGOLIA_APP_ID=$(ALGOLIA_APP_ID)"
        $yamlLines += "ALGOLIA_API_KEY=$(ALGOLIA_API_KEY)"
        $yamlLines += "ALGOLIA_INDEX_NAME=$(ALGOLIA_INDEX_NAME)"

        # Join the lines with newlines to create the final YAML string
        $envContent = $yamlLines -join [System.Environment]::NewLine

        Set-Content -Path "$(System.DefaultWorkingDirectory)/$(backendDirectory)/.env" -Value $envContent
        Write-Host "Created .env file in backend directory"
      displayName: 'Create Backend .env File'

    - script: |
        cd $(backendDirectory)
        npm run build
      displayName: 'Backend - Build'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(backendDirectory)/dist'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/backend.zip'
        replaceExistingArchive: true
      displayName: 'Archive backend files'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/backend.zip'
        ArtifactName: 'backend'
        publishLocation: 'Container'
      displayName: 'Publish backend artifact'

  - job: BuildFrontend
    displayName: 'Build Frontend'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '$(frontendNodeVersion)'
      displayName: 'Install Node.js $(frontendNodeVersion)'

    - script: |
        cd $(frontendDirectory)
        npm install
      displayName: 'Frontend - npm install'

    - powershell: |
        # Create .env file in the frontend directory
        # Initialize an empty array to hold each line of the YAML content
        $yamlLines = @()

        # Add each key-value pair to the array, substituting environment variable values
        $yamlLines += "NEXT_PUBLIC_API_URL=$(BACKEND_URL)"

        # Join the lines with newlines to create the final YAML string
        $envContent = $yamlLines -join [System.Environment]::NewLine
        
        Set-Content -Path "$(System.DefaultWorkingDirectory)/$(frontendDirectory)/.env.local" -Value $envContent
        Write-Host "Created .env.local file in frontend directory"
      displayName: 'Create Frontend .env File'

    - script: |
        cd $(frontendDirectory)
        npm run build
      displayName: 'Frontend - Build'
      env:
        NODE_ENV: production

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(frontendDirectory)/.next'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/frontend.zip'
        replaceExistingArchive: true
      displayName: 'Archive frontend files'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/frontend.zip'
        ArtifactName: 'frontend'
        publishLocation: 'Container'
      displayName: 'Publish frontend artifact'