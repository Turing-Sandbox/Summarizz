# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- dev

pool:
  name: 'Windows (BENJAMIN)'

variables:
  backendNodeVersion: '18.x'
  frontendNodeVersion: '18.x'
  backendDirectory: 'backend'
  frontendDirectory: 'frontend'

stages:
- stage: Test
  displayName: 'Run Tests'
  jobs:
  - job: BackendTests
    displayName: 'Backend Tests'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '$(backendNodeVersion)'
      displayName: 'Install Node.js $(backendNodeVersion)'

    - script: |
        cd $(backendDirectory)
        npm install
      displayName: 'Backend - npm install'

    - script: |
        cd $(backendDirectory)
        npm run lint
      displayName: 'Backend - Lint'
      continueOnError: true

    - script: |
        cd $(backendDirectory)
        start cmd /c "npm run dev"
        # Allow time for the server to start
        sleep 15
      displayName: 'Start Backend Server'

    - script: |
        cd $(backendDirectory)
        npm test
      displayName: 'Backend - Run tests'

    - script: |
        # Find and kill the Node.js process
        FOR /F "tokens=5" %%T IN ('netstat -a -n -o ^| findstr :3000 ^| findstr LISTENING') DO taskkill /F /PID %%T
      displayName: 'Stop Backend Server'
      continueOnError: true
      condition: always()

  - job: FrontendTests
    displayName: 'Frontend Tests'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '$(frontendNodeVersion)'
      displayName: 'Install Node.js $(frontendNodeVersion)'

    - script: |
        cd $(frontendDirectory)
        npm install
      displayName: 'Frontend - npm install'

    - script: |
        cd $(frontendDirectory)
        npm run lint
      displayName: 'Frontend - Lint'
      continueOnError: true

- stage: Build
  displayName: 'Build Applications'
  dependsOn: Test
  jobs:
  - job: BuildBackend
    displayName: 'Build Backend'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '$(backendNodeVersion)'
      displayName: 'Install Node.js $(backendNodeVersion)'

    - script: |
        cd $(backendDirectory)
        npm install
      displayName: 'Backend - npm install'

    - script: |
        cd $(backendDirectory)
        npm run build
      displayName: 'Backend - Build'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(backendDirectory)/dist'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/backend.zip'
        replaceExistingArchive: true
      displayName: 'Archive backend files'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/backend.zip'
        ArtifactName: 'backend'
        publishLocation: 'Container'
      displayName: 'Publish backend artifact'

  - job: BuildFrontend
    displayName: 'Build Frontend'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '$(frontendNodeVersion)'
      displayName: 'Install Node.js $(frontendNodeVersion)'

    - script: |
        cd $(frontendDirectory)
        npm install
      displayName: 'Frontend - npm install'

    - script: |
        cd $(frontendDirectory)
        npm run build
      displayName: 'Frontend - Build'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(frontendDirectory)/.next'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/frontend.zip'
        replaceExistingArchive: true
      displayName: 'Archive frontend files'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/frontend.zip'
        ArtifactName: 'frontend'
        publishLocation: 'Container'
      displayName: 'Publish frontend artifact'